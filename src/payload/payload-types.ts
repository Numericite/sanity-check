/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    tools: Tool;
    media: Media;
    categories: Category;
    certifications: Certification;
    accessors: Accessor;
    locations: Location;
    transfers: Transfer;
    features: Feature;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    categories: {
      relatedTools: 'tools';
    };
  };
  collectionsSelect: {
    tools: ToolsSelect<false> | ToolsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    certifications: CertificationsSelect<false> | CertificationsSelect<true>;
    accessors: AccessorsSelect<false> | AccessorsSelect<true>;
    locations: LocationsSelect<false> | LocationsSelect<true>;
    transfers: TransfersSelect<false> | TransfersSelect<true>;
    features: FeaturesSelect<false> | FeaturesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tools".
 */
export interface Tool {
  id: number;
  name: string;
  site_link: string;
  logo?: (number | null) | Media;
  description?: string | null;
  subcontractors?: string | null;
  subcontractors_infra?:
    | {
        name?: string | null;
        id?: string | null;
      }[]
    | null;
  transfer_out_eu?: ('Oui' | 'Non' | 'Au choix') | null;
  privacy_score_saas?: ('A' | 'B' | 'C' | 'D' | 'E' | 'F') | null;
  privacy_score_self_hosted?: ('A' | 'B' | 'C' | 'D' | 'E' | 'F') | null;
  online_accessible_dpa?: boolean | null;
  certification_dpf?: boolean | null;
  opensource?: boolean | null;
  self_host_possibility?: boolean | null;
  fr_documentation?: boolean | null;
  dpa_compliant?: boolean | null;
  dpa_link?: string | null;
  enterprise_european?: boolean | null;
  actions?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  location_note?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  transfer_informations?: string | null;
  dpa_file?: (number | null) | Media;
  /**
   * Sélectionnez une ou plusieurs catégories et cochez celle qui est principale.
   */
  categories?:
    | {
        category: number | Category;
        main?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Sélectionnez une ou plusieurs certifications.
   */
  certifications?:
    | {
        certification: number | Certification;
        id?: string | null;
      }[]
    | null;
  /**
   * Sélectionnez une ou plusieurs certifications.
   */
  certifications_subcontractors?:
    | {
        certification: number | Certification;
        id?: string | null;
      }[]
    | null;
  /**
   * Sélectionnez une ou plusieurs accesseurs.
   */
  accessors?:
    | {
        accessor: number | Accessor;
        id?: string | null;
      }[]
    | null;
  /**
   * Sélectionnez une ou plusieurs localisations.
   */
  locations_enterprise?:
    | {
        location: number | Location;
        id?: string | null;
      }[]
    | null;
  /**
   * Sélectionnez une ou plusieurs localisations.
   */
  locations_host_client?:
    | {
        location: number | Location;
        id?: string | null;
      }[]
    | null;
  /**
   * Sélectionnez une ou plusieurs localisations.
   */
  locations_final_users?:
    | {
        location: number | Location;
        id?: string | null;
      }[]
    | null;
  /**
   * Sélectionnez une ou plusieurs encadrements.
   */
  transfers?:
    | {
        transfer: number | Transfer;
        id?: string | null;
      }[]
    | null;
  /**
   * Sélectionnez une ou plusieurs fonctionnalités.
   */
  features?:
    | {
        feature: number | Feature;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  description?: string | null;
  icon: string;
  color: string;
  fonctionnalities?: string | null;
  vigilances?: string | null;
  recommendations?: string | null;
  relatedTools?: {
    docs?: (number | Tool)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "certifications".
 */
export interface Certification {
  id: number;
  name: string;
  tools?: (number | Tool)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accessors".
 */
export interface Accessor {
  id: number;
  name: string;
  tools?: (number | Tool)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: number;
  name: string;
  tools?: (number | Tool)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transfers".
 */
export interface Transfer {
  id: number;
  name: string;
  tools?: (number | Tool)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "features".
 */
export interface Feature {
  id: number;
  name: string;
  tools?: (number | Tool)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'tools';
        value: number | Tool;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'certifications';
        value: number | Certification;
      } | null)
    | ({
        relationTo: 'accessors';
        value: number | Accessor;
      } | null)
    | ({
        relationTo: 'locations';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'transfers';
        value: number | Transfer;
      } | null)
    | ({
        relationTo: 'features';
        value: number | Feature;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tools_select".
 */
export interface ToolsSelect<T extends boolean = true> {
  name?: T;
  site_link?: T;
  logo?: T;
  description?: T;
  subcontractors?: T;
  subcontractors_infra?:
    | T
    | {
        name?: T;
        id?: T;
      };
  transfer_out_eu?: T;
  privacy_score_saas?: T;
  privacy_score_self_hosted?: T;
  online_accessible_dpa?: T;
  certification_dpf?: T;
  opensource?: T;
  self_host_possibility?: T;
  fr_documentation?: T;
  dpa_compliant?: T;
  dpa_link?: T;
  enterprise_european?: T;
  actions?: T;
  location_note?: T;
  transfer_informations?: T;
  dpa_file?: T;
  categories?:
    | T
    | {
        category?: T;
        main?: T;
        id?: T;
      };
  certifications?:
    | T
    | {
        certification?: T;
        id?: T;
      };
  certifications_subcontractors?:
    | T
    | {
        certification?: T;
        id?: T;
      };
  accessors?:
    | T
    | {
        accessor?: T;
        id?: T;
      };
  locations_enterprise?:
    | T
    | {
        location?: T;
        id?: T;
      };
  locations_host_client?:
    | T
    | {
        location?: T;
        id?: T;
      };
  locations_final_users?:
    | T
    | {
        location?: T;
        id?: T;
      };
  transfers?:
    | T
    | {
        transfer?: T;
        id?: T;
      };
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  icon?: T;
  color?: T;
  fonctionnalities?: T;
  vigilances?: T;
  recommendations?: T;
  relatedTools?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "certifications_select".
 */
export interface CertificationsSelect<T extends boolean = true> {
  name?: T;
  tools?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accessors_select".
 */
export interface AccessorsSelect<T extends boolean = true> {
  name?: T;
  tools?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  name?: T;
  tools?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transfers_select".
 */
export interface TransfersSelect<T extends boolean = true> {
  name?: T;
  tools?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "features_select".
 */
export interface FeaturesSelect<T extends boolean = true> {
  name?: T;
  tools?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}